# Define the constant path for the customer list file
$customerListPath = "C:\Users\User\Desktop\JEAV\Customer List.csv"

# Define the base path for the raw file directory
$rawFileBasePath = "C:\Users\User\Desktop\JEAV\EDI Reconcile (monday)"

# Function to get the most recent week folder
function Get-LatestWeekFolder {
    Get-ChildItem -Path $rawFileBasePath -Directory | 
    Where-Object { $_.Name -match '^Week_\d+_\(\d{2}\.\d{2}\.\d{2}\)_\(\d{2}\.\d{2}\.\d{2}\)$' } |
    Sort-Object LastWriteTime -Descending | 
    Select-Object -First 1
}

# Function to convert INV NO to date
function ConvertTo-Date {
    param (
        [string]$invNo
    )
    # Add logic for conversion here if needed
    return "ConvertedDatePlaceholder" # Replace with actual conversion logic
}

# Get the latest week folder
$latestWeekFolder = Get-LatestWeekFolder

if ($latestWeekFolder) {
    # Extract date range from the folder name
    # Example logic if folder name contains dates
    $dateRange = if ($latestWeekFolder.Name -match '\((.*?)\)') { $matches[1] } else { "Unknown_DateRange" }

    # Construct the full path to the raw file
    $rawFilePathPattern = Join-Path -Path $latestWeekFolder.FullName -ChildPath "1.Gathering_Data\RS\RAW_EDI_RS_*.csv"

    # Get the most recent raw file in the folder
    $latestRawFile = Get-ChildItem -Path $rawFilePathPattern | Sort-Object LastWriteTime -Descending | Select-Object -First 1

    if ($latestRawFile) {
        Write-Host "Using raw file: $($latestRawFile.FullName)" -ForegroundColor Green
        
        # Import CSV files
        $filteredData = Import-Csv -Path $latestRawFile.FullName
        $customerList = Import-Csv -Path $customerListPath

        $reportData = $filteredData | 
            Where-Object { 
                ($_.'Carrier' -in @("FedEx", "UPS", "FREIGHT")) -and
                -not ($_.Customer -like "Curlmix*" -or $_.Customer -like "TRG*")
            } | 
            ForEach-Object {
                $currentRow = $_
                $customer = $customerList | Where-Object { $_.'Customer Id' -eq $currentRow.'Customer #' } | Select-Object -First 1
                
                # Extract last 8 characters of Invoice Number for INV NO
                $invNo = if ($currentRow.'Invoice Number') { $currentRow.'Invoice Number'[-8..-1] -join '' } else { "N/A" }
                
                # Convert INV NO to date
                $convertedDate = ConvertTo-Date -invNo $invNo
                
                # Use the Ship Date for MEMO INV ITEM
                $shipDateString = if ($currentRow.'Ship Date') { $currentRow.'Ship Date' } else { "N/A" }
                
                # Determine the ACCOUNT column value
                $accountValue = switch ($currentRow.'Carrier') {
                    "UPS" { "UPS SALES" }
                    "FREIGHT" { "FREIGHT & OTHER" }
                    "FedEx" {
                        switch ($currentRow.'Sub Carrier') {
                            "ENGLAND" { "FEDEX SALES (ENGLAND LOGISTICS)" }
                            "RSIS" { "FEDEX SALES (DESCARTE)" }
                            default { "FEDEX SALES (DESCARTE)" }
                        }
                    }
                    default { "OTHER SALES" }
                }
                
                # Construct MEMO INV ITEM, add (LTL) if the carrier is FREIGHT
                $memoInvItem = if ($currentRow.'Carrier' -eq "FREIGHT") {
                    "FREIGHT (LTL) | AIRBILL# $($currentRow.'Airbill Number') | DATE $shipDateString"
                } else {
                    "$($currentRow.'Carrier') | AIRBILL# $($currentRow.'Airbill Number') | DATE $shipDateString"
                }
                
                # If customer is not found, set CUSTOMER, TERMS, and REP to "N/A"
                [PSCustomObject]@{
                    'CUST NO' = $currentRow.'Customer #'
                    'INV NO' = $invNo
                    'CUSTOMER' = if ($customer) { $customer.'Customer' } else { "N/A" }
                    'MEMO INV ITEM' = $memoInvItem
                    'DATE' = $convertedDate
                    'TERMS' = if ($customer) { "NET $($customer.'Inv Terms'[0..1] -join '')" } else { "N/A" }
                    'ACCOUNT' = $accountValue
                    'AMOUNT' = [decimal]$currentRow.'Customer Base' + [decimal]$currentRow.'Chg 1 Total' + [decimal]$currentRow.'Chg 2 Total' + [decimal]$currentRow.'Chg 3 Total' + [decimal]$currentRow.'Chg 4 Total' + [decimal]$currentRow.'Chg 5 Total' + [decimal]$currentRow.'Chg 6 Total' + [decimal]$currentRow.'Chg 7 Total' + [decimal]$currentRow.'Chg 8 Total'
                    'REP' = if ($customer) { $customer.'Customer Salesrep' } else { "N/A" }
                }
            }

        # Define output folder path
        $outputFolderPath = Join-Path -Path $latestWeekFolder.FullName -ChildPath '4.QB_Report\SHIPIUM (NOT DHL)'

        # Ensure the output directory exists
        if (-not (Test-Path -Path $outputFolderPath)) {
            New-Item -Path $outputFolderPath -ItemType Directory -Force | Out-Null
        }

        # Define output file name
        $outputFileName = "SHIPIUM EDI ROCKSOLID UPS FedEx INVOICES & INCOME_$dateRange.csv"

        # Define output file path
        $outputFilePath = Join-Path -Path $outputFolderPath -ChildPath $outputFileName

        # Export data to CSV, selecting only desired columns
        $reportData | Select-Object 'CUST NO', 'INV NO', 'CUSTOMER', 'MEMO INV ITEM', 'DATE', 'TERMS', 'ACCOUNT', 'AMOUNT', 'REP' |
            Export-Csv -Path $outputFilePath -NoTypeInformation -Force

        Write-Host "Filtered report exported to: $outputFilePath" -ForegroundColor Green
        Write-Host "Script completed successfully." -ForegroundColor Green

    } else {
        Write-Host "No raw file found in the latest week folder." -ForegroundColor Red
    }
} else {
    Write-Host "No week folders found in the specified directory." -ForegroundColor Red
}
